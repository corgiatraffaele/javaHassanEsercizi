-Hashmap

è una struttura dati che va a mappare il valore di una chiave(k), associando un detrminato valore (v)
    es: fate finta di avere un mazzo di chiavui con i relativi colori di segnatura.Dove i colori sono univoci.

    -Si basano ed implementa l'interfaccia Map<K,V>  ereditando la classe astratta AsbstractMap<K,V>
    -Il tipo della chiave e valore vengono scelti dal programmatore e non necessariamente devono essere uguali.

    -1° MODO:
        - Map<K,V> nomeMappa= new HashMap();

    -2°MODO:
        -HashMap<K,V> nomeMappa= new HashMap();

-iterazione sulle hashmap ---> foreach = for (T v: strutturaIterativa){}

-Le mappe hanno due valori possibili all'interno della quale posso iterare: chiavi e/o i valori
-Chiavi   (per iterare sulle chiavi utilizzio il metodo keyset() appartenente alle mappe.
Questo metodo mi permetterà di stampare e ottenere i valori delle chiavi della mia mappa con conseguente possibile ottenimento dei valori associati alle chiavi.
 - esempio:
 for(String key : mappa.keySet())
 {
     System.out.println(key + " "+mappa.get(key));
 }

    -esempio: lambda-notation
        mappa.forEach((key, value) -> {system.out.printl(key + " " + value );});
        mappa.keySet().forEach(key->{System.out.printl(key +  " " +


-Valori
per iterare sui valori utilizzo il metodo values() per ottenere SOLO i valori consecutivi della mia mappa
    - for(T v: mappa.values().forEach(v ->{System.out.println(v);}); //ciclo direttamente sui valori


Array<list>

-Gli array di tipo primitivo hanno un problema di staticità:
    la dimensioni in caso di inserimento/cancellazione varia, per poter riadattare il contenuto dell'array al programma è un lavoraccio.

 -Gli array<list> risolvono questo problema, essendo una struttura dati che contiene sempre elementi omogenei ma con più dinamicità
 -Implementano la classe AbstractList la quale implementa l'interfaccia List.

 -List<T> nome = new ArrayList<>();
 .List<String> nomiMacchine = new ArrayList<>();



